{"ast":null,"code":"import _defineProperty from\"/Users/sriramgovindan/Desktop/Lenge_application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";import _classCallCheck from\"/Users/sriramgovindan/Desktop/Lenge_application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/sriramgovindan/Desktop/Lenge_application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _assertThisInitialized from\"/Users/sriramgovindan/Desktop/Lenge_application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";import _inherits from\"/Users/sriramgovindan/Desktop/Lenge_application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import _createSuper from\"/Users/sriramgovindan/Desktop/Lenge_application/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import React,{Component}from\"react\";import NavBar from\"../../components/navbar/navbar\";import{Button,ButtonGroup}from\"reactstrap\";import\"./CardioWorkouts.css\";import\"./StrengthWorkouts.css\";import jwt_decode from\"jwt-decode\";import{isLoggedIn}from\"../../components/Authentication\";import cardio from\"./cardio.JPG\";import CardioCard from\"./CardioCard\";var CardioWorkouts=/*#__PURE__*/function(_Component){_inherits(CardioWorkouts,_Component);var _super=_createSuper(CardioWorkouts);function CardioWorkouts(){var _this;_classCallCheck(this,CardioWorkouts);_this=_super.call(this);_this.state={cardioWorkouts:[],difficulty:\"\"};_this.onChange=_this.onChange.bind(_assertThisInitialized(_this));return _this;}_createClass(CardioWorkouts,[{key:\"onChange\",value:function onChange(e){this.setState(_defineProperty({},e.target.name,e.target.value));}},{key:\"changeDifficulty\",value:function changeDifficulty(theDifficulty){var _this2=this;this.setState({difficulty:theDifficulty});var token=localStorage.getItem(\"usertoken\");var decodedToken=jwt_decode(token);var email=decodedToken.identity.email;fetch(\"http://localhost:8000/cardio:\"+email+\"/difficulty:\"+theDifficulty,{method:\"GET\",mode:\"cors\",headers:{\"Content-Type\":\"application/json\"}}).then(function(response){return response.json().then(function(data){_this2.setState({cardioWorkouts:data});});});}},{key:\"render\",value:function render(){var _this3=this;var workoutCards=this.state.cardioWorkouts.map(function(workout){return/*#__PURE__*/React.createElement(\"li\",{className:\"flex-item\"},/*#__PURE__*/React.createElement(CardioCard,{workout:workout}));});return/*#__PURE__*/React.createElement(\"div\",{className:\"workouts\"},/*#__PURE__*/React.createElement(NavBar,{logged:isLoggedIn()}),/*#__PURE__*/React.createElement(\"header\",{className:\"workouts-header\"},/*#__PURE__*/React.createElement(\"img\",{className:\"cardio-image\",src:cardio,alt:\"cardio-img\"}),/*#__PURE__*/React.createElement(ButtonGroup,null,/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return _this3.changeDifficulty(\"easy\");}},\"Easy\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return _this3.changeDifficulty(\"medium\");}},\"Medium\"),/*#__PURE__*/React.createElement(Button,{onClick:function onClick(){return _this3.changeDifficulty(\"hard\");}},\"Hard\")),this.state.difficulty?/*#__PURE__*/React.createElement(\"h1\",{className:\"difficulty-label\"},\"difficulty: \",this.state.difficulty):/*#__PURE__*/React.createElement(\"h1\",{className:\"difficulty-label\"},\"select a difficulty\"),/*#__PURE__*/React.createElement(\"ul\",{className:\"flex-container wrap-reversez\"},workoutCards)));}}]);return CardioWorkouts;}(Component);export default CardioWorkouts;","map":{"version":3,"sources":["/Users/sriramgovindan/Desktop/Lenge_application/src/pages/workouts/CardioWorkouts.js"],"names":["React","Component","NavBar","Button","ButtonGroup","jwt_decode","isLoggedIn","cardio","CardioCard","CardioWorkouts","state","cardioWorkouts","difficulty","onChange","bind","e","setState","target","name","value","theDifficulty","token","localStorage","getItem","decodedToken","email","identity","fetch","method","mode","headers","then","response","json","data","workoutCards","map","workout","changeDifficulty"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\nimport NavBar from \"../../components/navbar/navbar\";\nimport { Button, ButtonGroup } from \"reactstrap\";\n\nimport \"./CardioWorkouts.css\";\nimport \"./StrengthWorkouts.css\";\n\nimport jwt_decode from \"jwt-decode\";\n\nimport { isLoggedIn } from \"../../components/Authentication\";\n\nimport cardio from \"./cardio.JPG\";\n\nimport CardioCard from \"./CardioCard\";\n\nclass CardioWorkouts extends Component {\n  constructor() {\n    super();\n    this.state = {\n      cardioWorkouts: [],\n      difficulty: \"\",\n    };\n\n    this.onChange = this.onChange.bind(this);\n  }\n\n  onChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  changeDifficulty(theDifficulty)\n  {\n\n    this.setState({difficulty: theDifficulty});\n\n    const token = localStorage.getItem(\"usertoken\");\n    const decodedToken = jwt_decode(token);\n    const email = decodedToken.identity.email;\n\n    fetch(\n      \"http://localhost:8000/cardio:\" + email + \"/difficulty:\" + theDifficulty,\n      {\n        method: \"GET\",\n        mode: \"cors\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      }\n    ).then(response =>\n      response.json().then(data => {\n        this.setState({cardioWorkouts: data});\n      })\n    );\n  }\n\n  render() {\n    let workoutCards = this.state.cardioWorkouts.map(workout => {\n      return (\n        <li className=\"flex-item\">\n          <CardioCard workout={workout} />\n        </li>\n      );\n    });\n    return (\n      <div className=\"workouts\">\n        <NavBar logged={isLoggedIn()} />\n        <header className=\"workouts-header\">\n          <img className=\"cardio-image\" src={cardio} alt=\"cardio-img\"></img>\n          <ButtonGroup>\n            <Button onClick={() => this.changeDifficulty(\"easy\")}>Easy</Button>\n            <Button onClick={() => this.changeDifficulty(\"medium\")}>Medium</Button>\n            <Button onClick={() => this.changeDifficulty(\"hard\")}>Hard</Button>\n          </ButtonGroup>\n          {this.state.difficulty ? (\n            <h1 className=\"difficulty-label\">difficulty: {this.state.difficulty}</h1>\n          ) : (\n            <h1 className=\"difficulty-label\">select a difficulty</h1>\n          )}\n          <ul className=\"flex-container wrap-reversez\">{workoutCards}</ul>\n        </header>\n      </div>\n    );\n  }\n}\n\nexport default CardioWorkouts;\n\n"]},"metadata":{},"sourceType":"module"}