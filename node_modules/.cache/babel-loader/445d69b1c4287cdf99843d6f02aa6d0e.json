{"ast":null,"code":"import axios from\"axios\";import jwt_decode from\"jwt-decode\";export var register=function register(newUser){return axios.post(\"http://localhost:8000/users/register\",{first_name:newUser.first_name,last_name:newUser.last_name,email:newUser.email,password:newUser.password}).then(function(response){return response.data;}).catch(function(err){console.log(err);});};export var login=function login(user){return axios.post(\"http://localhost:8000/users/login\",{email:user.email,password:user.password}).then(function(response){localStorage.setItem(\"usertoken\",response.data.token);return response.data;}).catch(function(err){console.log(err);});};export var addCardio=function addCardio(workout){var theToken=localStorage.getItem(\"usertoken\");var decodedToken=jwt_decode(theToken);var email=decodedToken.identity.email;return axios.post(\"http://localhost:8000/add_cardio:\"+email,{user_cardio:workout}).then(function(response){return response;}).catch(function(err){console.log(err);});};export var addStrength=function addStrength(workout){var theToken=localStorage.getItem(\"usertoken\");var decodedToken=jwt_decode(theToken);var email=decodedToken.identity.email;return axios.post(\"http://localhost:8000/add_workout:\"+email,{user_workouts:workout}).then(function(response){return response;}).catch(function(err){console.log(err);});};export var emailWorkout=function emailWorkout(email,title,body){fetch('http://localhost:4000/mail',{method:\"POST\",mode:'cors',headers:{'Content-Type':'application/json'},body:JSON.stringify({email:email,title:title,body:body})}).catch(function(error){return console.log(error);});};","map":{"version":3,"sources":["/Users/sriramgovindan/Desktop/Lenge_application/src/components/UserFunctions.js"],"names":["axios","jwt_decode","register","newUser","post","first_name","last_name","email","password","then","response","data","catch","err","console","log","login","user","localStorage","setItem","token","addCardio","workout","theToken","getItem","decodedToken","identity","user_cardio","addStrength","user_workouts","emailWorkout","title","body","fetch","method","mode","headers","JSON","stringify","error"],"mappings":"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","sourcesContent":["import axios from \"axios\";\nimport jwt_decode from \"jwt-decode\";\n\nexport const register = newUser => {\n  return axios\n    .post(\"http://localhost:8000/users/register\", {\n      first_name: newUser.first_name,\n      last_name: newUser.last_name,\n      email: newUser.email,\n      password: newUser.password\n    })\n    .then(response => {\n      return response.data;\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const login = user => {\n  return axios\n    .post(\"http://localhost:8000/users/login\", {\n      email: user.email,\n      password: user.password\n    })\n    .then(response => {\n      localStorage.setItem(\"usertoken\", response.data.token);\n      return response.data;\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const addCardio = workout => {\n  const theToken = localStorage.getItem(\"usertoken\");\n  const decodedToken = jwt_decode(theToken);\n\n  const email = decodedToken.identity.email;\n\n  return axios\n    .post(\"http://localhost:8000/add_cardio:\" + email, {\n      user_cardio: workout\n    })\n    .then(response => {\n      return response;\n    })\n    .catch(err => {\n      console.log(err);\n    });\n};\n\nexport const addStrength = workout => {\n    const theToken = localStorage.getItem(\"usertoken\");\n    const decodedToken = jwt_decode(theToken);\n  \n    const email = decodedToken.identity.email;\n  \n    return axios\n      .post(\"http://localhost:8000/add_workout:\" + email, {\n        user_workouts: workout\n      })\n      .then(response => {\n        return response;\n      })\n      .catch(err => {\n        console.log(err);\n      });\n  };\n\n  export const emailWorkout = (email, title, body) => {\n    fetch('http://localhost:4000/mail', {\n        method: \"POST\",\n        mode: 'cors',\n        headers: {\n            'Content-Type': 'application/json'\n        },\n        body: JSON.stringify({ email: email, title: title, body: body})\n    }).catch(error => console.log(error))\n}\n\n"]},"metadata":{},"sourceType":"module"}